{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport { Engine } from \"@babylonjs/core/Engines/engine\";\n\nvar ExpoEngine = function (_Engine) {\n  _inherits(ExpoEngine, _Engine);\n\n  function ExpoEngine() {\n    _classCallCheck(this, ExpoEngine);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ExpoEngine).apply(this, arguments));\n  }\n\n  _createClass(ExpoEngine, [{\n    key: \"getHostDocument\",\n    value: function getHostDocument() {\n      return null;\n    }\n  }]);\n\n  return ExpoEngine;\n}(Engine);\n\nexport default ExpoEngine;","map":{"version":3,"sources":["C:/Users/kwa/projects/tattools-rn/BabylonjsDemo/ExpoEngine.js"],"names":["Engine","ExpoEngine"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,gCAAvB;;IAEMC,U;;;;;;;;;;;sCACgB;AACd,aAAO,IAAP;AACH;;;;EAHoBD,M;;AAMzB,eAAeC,UAAf","sourcesContent":["import { Engine } from \"@babylonjs/core/Engines/engine\";\r\n\r\nclass ExpoEngine extends Engine {\r\n    getHostDocument() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default ExpoEngine;"]},"metadata":{},"sourceType":"module"}