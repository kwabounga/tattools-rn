{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kwa\\\\projects\\\\tattools-rn\\\\tattools-rn\\\\components\\\\Ui.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport var VerticalBarButton = function (_React$Component) {\n  _inherits(VerticalBarButton, _React$Component);\n\n  function VerticalBarButton(props) {\n    var _this;\n\n    _classCallCheck(this, VerticalBarButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VerticalBarButton).call(this, props));\n    _this.allBtNames = [\"bt1\", \"bt2\"];\n    return _this;\n  }\n\n  _createClass(VerticalBarButton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: [styles.container, this.props.position == 'left' ? styles.isLeft : styles.isRight],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        }\n      }, this.allBtNames.map(function (name, id) {\n        console.log(name);\n        return React.createElement(TouchableOpacity, {\n          style: styles.button,\n          key: id,\n          onPress: function onPress() {\n            return alert(\"click on \" + name + \"!\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          }\n        }, React.createElement(Text, {\n          style: styles.textButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          }\n        }, name));\n      }));\n    }\n  }]);\n\n  return VerticalBarButton;\n}(React.Component);\nvar styles = StyleSheet.create({\n  container: {\n    padding: 0,\n    position: \"absolute\",\n    top: 0\n  },\n  isLeft: {\n    left: 0\n  },\n  isRight: {\n    right: 0\n  },\n  button: {\n    width: 50,\n    height: 50,\n    backgroundColor: \"#B8860B\",\n    padding: 3\n  },\n  textButton: {\n    color: \"#FFF\"\n  }\n});","map":{"version":3,"sources":["C:/Users/kwa/projects/tattools-rn/tattools-rn/components/Ui.js"],"names":["React","VerticalBarButton","props","allBtNames","styles","container","position","isLeft","isRight","map","name","id","console","log","button","alert","textButton","Component","StyleSheet","create","padding","top","left","right","width","height","backgroundColor","color"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AASA,WAAaC,iBAAb;AAAA;;AACE,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;AAEA,UAAKC,UAAL,GAAkB,CAAC,KAAD,EAAQ,KAAR,CAAlB;AAHiB;AAIlB;;AALH;AAAA;AAAA,6BAOW;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAoB,KAAKH,KAAL,CAAWI,QAAX,IAAqB,MAArB,GAA4BF,MAAM,CAACG,MAAnC,GAA0CH,MAAM,CAACI,OAArE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKL,UAAL,CAAgBM,GAAhB,CAAoB,UAACC,IAAD,EAAOC,EAAP,EAAc;AACjCC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,eACE,oBAAC,gBAAD;AACE,UAAA,KAAK,EAAEN,MAAM,CAACU,MADhB;AAEE,UAAA,GAAG,EAAEH,EAFP;AAGE,UAAA,OAAO,EAAE;AAAA,mBAAMI,KAAK,eAAaL,IAAb,OAAX;AAAA,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA,WAIE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEN,MAAM,CAACY,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiCN,IAAjC,CAJF,CADF;AAQD,OAVA,CADH,CADF;AAeD;AAvBH;;AAAA;AAAA,EAAuCV,KAAK,CAACiB,SAA7C;AA0BA,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,OAAO,EAAE,CADA;AAETd,IAAAA,QAAQ,EAAE,UAFD;AAGTe,IAAAA,GAAG,EAAE;AAHI,GADoB;AAM/Bd,EAAAA,MAAM,EAAC;AACLe,IAAAA,IAAI,EAAE;AADD,GANwB;AAS/Bd,EAAAA,OAAO,EAAC;AACNe,IAAAA,KAAK,EAAE;AADD,GATuB;AAY/BT,EAAAA,MAAM,EAAE;AACNU,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,eAAe,EAAE,SAHX;AAINN,IAAAA,OAAO,EAAE;AAJH,GAZuB;AAkB/BJ,EAAAA,UAAU,EAAE;AACVW,IAAAA,KAAK,EAAE;AADG;AAlBmB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\r\n// export function Nav () {\r\n//     return (\r\n//         <View>\r\n//             <Text>Hello</Text>\r\n//         </View>\r\n//     )\r\n// }\r\nexport class VerticalBarButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.allBtNames = [\"bt1\", \"bt2\"];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={[styles.container, (this.props.position=='left'?styles.isLeft:styles.isRight)]}>\r\n        {this.allBtNames.map((name, id) => {\r\n          console.log(name);\r\n          return (\r\n            <TouchableOpacity\r\n              style={styles.button}\r\n              key={id}\r\n              onPress={() => alert(`click on ${name}!`)}>\r\n              <Text style={styles.textButton}>{name}</Text>\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 0,\r\n    position: \"absolute\",    \r\n    top: 0,\r\n  },\r\n  isLeft:{\r\n    left: 0,\r\n  },\r\n  isRight:{\r\n    right: 0,\r\n  },\r\n  button: {\r\n    width: 50,\r\n    height: 50,\r\n    backgroundColor: \"#B8860B\",\r\n    padding: 3,\r\n  },\r\n  textButton: {\r\n    color: \"#FFF\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}