{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kwa\\\\projects\\\\tattools-rn\\\\tattools-rn\\\\components\\\\Ui.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nexport var VerticalBarButton = function (_React$Component) {\n  _inherits(VerticalBarButton, _React$Component);\n\n  function VerticalBarButton(props) {\n    var _this;\n\n    _classCallCheck(this, VerticalBarButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VerticalBarButton).call(this, props));\n    _this.allBtNames = [\"bt1\", \"bt2\"];\n    return _this;\n  }\n\n  _createClass(VerticalBarButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: [styles.container, this.props.position == 'left' ? styles.isLeft : styles.isRight],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        }\n      }, Object.keys(this.props.actions).map(function (name, id) {\n        console.log(name);\n        return React.createElement(TouchableOpacity, {\n          style: styles.button,\n          key: name + id,\n          onPress: function onPress() {\n            return _this2.props.actions[name]();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          }\n        }, React.createElement(Icon, {\n          name: name,\n          size: 40,\n          color: rawStyles.iconButton.color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return VerticalBarButton;\n}(React.Component);\nexport function NavBar() {\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    }\n  });\n}\nvar rawStyles = {\n  container: {\n    margin: 10,\n    position: \"absolute\",\n    top: 0\n  },\n  isLeft: {\n    left: 0\n  },\n  isRight: {\n    right: 0\n  },\n  button: {\n    width: 60,\n    height: 60,\n    backgroundColor: \"#2E2E2E\",\n    borderRadius: 10,\n    padding: 10,\n    marginBottom: 3\n  },\n  textButton: {\n    color: \"#FFF\"\n  },\n  iconButton: {\n    color: \"#E3E3E3\"\n  },\n  navBar: {\n    flex: 1\n  },\n  navFlex1: {\n    flex: 1\n  },\n  navFlex2: {\n    flex: 2\n  }\n};\nvar styles = StyleSheet.create(rawStyles);","map":{"version":3,"sources":["C:/Users/kwa/projects/tattools-rn/tattools-rn/components/Ui.js"],"names":["React","Icon","VerticalBarButton","props","allBtNames","styles","container","position","isLeft","isRight","Object","keys","actions","map","name","id","console","log","button","rawStyles","iconButton","color","Component","NavBar","margin","top","left","right","width","height","backgroundColor","borderRadius","padding","marginBottom","textButton","navBar","flex","navFlex1","navFlex2","StyleSheet","create"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,OAAOC,IAAP;AAEA,WAAaC,iBAAb;AAAA;;AACE,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;AAEA,UAAKC,UAAL,GAAkB,CAAC,KAAD,EAAQ,KAAR,CAAlB;AAHiB;AAIlB;;AALH;AAAA;AAAA,6BAOW;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAoB,KAAKH,KAAL,CAAWI,QAAX,IAAqB,MAArB,GAA4BF,MAAM,CAACG,MAAnC,GAA0CH,MAAM,CAACI,OAArE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,MAAM,CAACC,IAAP,CAAY,KAAKR,KAAL,CAAWS,OAAvB,EAAgCC,GAAhC,CAAoC,UAACC,IAAD,EAAOC,EAAP,EAAc;AACjDC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,eACE,oBAAC,gBAAD;AACE,UAAA,KAAK,EAAET,MAAM,CAACa,MADhB;AAEE,UAAA,GAAG,EAAEJ,IAAI,GAAGC,EAFd;AAGE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACZ,KAAL,CAAWS,OAAX,CAAmBE,IAAnB,GAAN;AAAA,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAEA,IAAZ;AAAkB,UAAA,IAAI,EAAE,EAAxB;AAA4B,UAAA,KAAK,EAAEK,SAAS,CAACC,UAAV,CAAqBC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,CADF;AASD,OAXA,CADH,CADF;AAgBD;AAxBH;;AAAA;AAAA,EAAuCrB,KAAK,CAACsB,SAA7C;AA0BA,OAAO,SAASC,MAAT,GAAmB;AACtB,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH;AACD,IAAMJ,SAAS,GAAG;AACdb,EAAAA,SAAS,EAAE;AACTkB,IAAAA,MAAM,EAAE,EADC;AAETjB,IAAAA,QAAQ,EAAE,UAFD;AAGTkB,IAAAA,GAAG,EAAE;AAHI,GADG;AAMdjB,EAAAA,MAAM,EAAC;AACLkB,IAAAA,IAAI,EAAE;AADD,GANO;AASdjB,EAAAA,OAAO,EAAC;AACNkB,IAAAA,KAAK,EAAE;AADD,GATM;AAYdT,EAAAA,MAAM,EAAE;AACNU,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,eAAe,EAAE,SAHX;AAINC,IAAAA,YAAY,EAAE,EAJR;AAKNC,IAAAA,OAAO,EAAE,EALH;AAMNC,IAAAA,YAAY,EAAC;AANP,GAZM;AAoBdC,EAAAA,UAAU,EAAE;AACVb,IAAAA,KAAK,EAAE;AADG,GApBE;AAuBdD,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AADG,GAvBE;AA0Bdc,EAAAA,MAAM,EAAC;AACHC,IAAAA,IAAI,EAAC;AADF,GA1BO;AA8BdC,EAAAA,QAAQ,EAAC;AACLD,IAAAA,IAAI,EAAC;AADA,GA9BK;AAiCdE,EAAAA,QAAQ,EAAC;AACLF,IAAAA,IAAI,EAAC;AADA;AAjCK,CAAlB;AAsCA,IAAM/B,MAAM,GAAGkC,UAAU,CAACC,MAAX,CAAkBrB,SAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\r\n\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n// const myIcon = <Icon name=\"rocket\" size={30} color=\"#900\" />;\r\nexport class VerticalBarButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.allBtNames = [\"bt1\", \"bt2\"];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={[styles.container, (this.props.position=='left'?styles.isLeft:styles.isRight)]}>\r\n        {Object.keys(this.props.actions).map((name, id) => {\r\n          console.log(name);\r\n          return (\r\n            <TouchableOpacity\r\n              style={styles.button}\r\n              key={name + id}\r\n              onPress={() => this.props.actions[name]()}>\r\n              {/* <Text style={styles.textButton}>{name}</Text> */}\r\n              <Icon name={name} size={40} color={rawStyles.iconButton.color} />\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n      </View>\r\n    );\r\n  }\r\n}\r\nexport function NavBar () {\r\n    return (\r\n        <View ></View>\r\n    );\r\n}\r\nconst rawStyles = {\r\n    container: {\r\n      margin: 10,\r\n      position: \"absolute\",    \r\n      top: 0,\r\n    },\r\n    isLeft:{\r\n      left: 0,\r\n    },\r\n    isRight:{\r\n      right: 0,\r\n    },\r\n    button: {\r\n      width: 60,\r\n      height: 60,\r\n      backgroundColor: \"#2E2E2E\",\r\n      borderRadius: 10,\r\n      padding: 10,\r\n      marginBottom:3,\r\n    },\r\n    textButton: {\r\n      color: \"#FFF\",\r\n    },\r\n    iconButton: {\r\n      color: \"#E3E3E3\",\r\n    },\r\n    navBar:{\r\n        flex:1\r\n\r\n    },\r\n    navFlex1:{\r\n        flex:1\r\n    },\r\n    navFlex2:{\r\n        flex:2\r\n    }\r\n\r\n  }\r\nconst styles = StyleSheet.create(rawStyles);\r\n"]},"metadata":{},"sourceType":"module"}