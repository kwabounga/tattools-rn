{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kwa\\\\projects\\\\tattools-rn\\\\tattools-rn\\\\components\\\\SceneComp1.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ArcRotateCamera } from \"@babylonjs/core/Cameras/arcRotateCamera\";\nimport { HemisphericLight } from \"@babylonjs/core/Lights/hemisphericLight\";\nimport { Vector3 } from \"@babylonjs/core/Maths/math.vector\";\nimport { GridMaterial } from \"@babylonjs/materials/grid/gridMaterial\";\nimport { Mesh } from \"@babylonjs/core/Meshes/mesh\";\nimport \"@babylonjs/core/Meshes/meshBuilder\";\nimport '@babylonjs/core/Materials/standardMaterial';\nimport SceneTemplate from \"../SceneTemplate\";\n\nvar SceneComp1 = function (_React$Component) {\n  _inherits(SceneComp1, _React$Component);\n\n  function SceneComp1() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SceneComp1);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SceneComp1)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onInitScene = function _callee(scene) {\n      var camera, light, material, box;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              camera = new ArcRotateCamera(\"ArcRotateCamera\", 2, 1.45, 10, new Vector3(0, 0, 0), scene);\n              camera.upperBetaLimit = Math.PI / 2;\n              camera.lowerRadiusLimit = 5;\n              camera.upperRadiusLimit = 25;\n              light = new HemisphericLight(\"light1\", new Vector3(0, 1, 0), scene);\n              light.intensity = 0.7;\n              material = new GridMaterial(\"grid\", scene);\n              box = Mesh.CreateBox(\"box\", 2, scene);\n              box.material = material;\n              scene.registerBeforeRender(function () {\n                box.rotation.y += 0.01;\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SceneComp1, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        }\n      }, React.createElement(SceneTemplate, {\n        onInitScene: this.onInitScene,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        }\n      }), React.createElement(Text, {\n        style: styles.nav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        }\n      }, this.props.name));\n    }\n  }]);\n\n  return SceneComp1;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 0\n  },\n  nav: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    zIndex: 10\n  }\n});\nexport default SceneComp1;","map":{"version":3,"sources":["C:/Users/kwa/projects/tattools-rn/tattools-rn/components/SceneComp1.js"],"names":["React","ArcRotateCamera","HemisphericLight","Vector3","GridMaterial","Mesh","SceneTemplate","SceneComp1","onInitScene","scene","camera","upperBetaLimit","Math","PI","lowerRadiusLimit","upperRadiusLimit","light","intensity","material","box","CreateBox","registerBeforeRender","rotation","y","styles","container","nav","props","name","Component","StyleSheet","create","flex","padding","position","left","top","zIndex"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,SAASC,eAAT,QAAgC,yCAAhC;AACA,SAASC,gBAAT,QAAiC,yCAAjC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,YAAT,QAA6B,wCAA7B;AAEA,SAASC,IAAT,QAAqB,6BAArB;AAEA,OAAO,oCAAP;AACA,OAAO,4CAAP;AAEA,OAAOC,aAAP;;IAEMC,U;;;;;;;;;;;;;;;;UACJC,W,GAAc,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAENC,cAAAA,MAFM,GAEG,IAAIT,eAAJ,CAAoB,iBAApB,EAAuC,CAAvC,EAA0C,IAA1C,EAAgD,EAAhD,EAAoD,IAAIE,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAApD,EAA0EM,KAA1E,CAFH;AAGZC,cAAAA,MAAM,CAACC,cAAP,GAAwBC,IAAI,CAACC,EAAL,GAAU,CAAlC;AACAH,cAAAA,MAAM,CAACI,gBAAP,GAA0B,CAA1B;AACAJ,cAAAA,MAAM,CAACK,gBAAP,GAA0B,EAA1B;AAMIC,cAAAA,KAXQ,GAWA,IAAId,gBAAJ,CAAqB,QAArB,EAA+B,IAAIC,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAA/B,EAAqDM,KAArD,CAXA;AAcZO,cAAAA,KAAK,CAACC,SAAN,GAAkB,GAAlB;AAGIC,cAAAA,QAjBQ,GAiBG,IAAId,YAAJ,CAAiB,MAAjB,EAAyBK,KAAzB,CAjBH;AAoBRU,cAAAA,GApBQ,GAoBFd,IAAI,CAACe,SAAL,CAAe,KAAf,EAAsB,CAAtB,EAAyBX,KAAzB,CApBE;AAuBZU,cAAAA,GAAG,CAACD,QAAJ,GAAeA,QAAf;AAEAT,cAAAA,KAAK,CAACY,oBAAN,CAA2B,YAAM;AAC/BF,gBAAAA,GAAG,CAACG,QAAJ,CAAaC,CAAb,IAAkB,IAAlB;AACD,eAFD;;AAzBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BA8BL;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGC,MAAM,CAACC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,WAAW,EAAG,KAAKjB,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGgB,MAAM,CAACE,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKC,KAAL,CAAWC,IAAxC,CAFF,CADF;AAMD;;;;EAtCsB5B,KAAK,CAAC6B,S;;AAyC/B,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,OAAO,EAAE;AAFA,GADoB;AAK/BP,EAAAA,GAAG,EAAE;AACHQ,IAAAA,QAAQ,EAAE,UADP;AAEHC,IAAAA,IAAI,EAAE,CAFH;AAGHC,IAAAA,GAAG,EAAE,CAHF;AAIHC,IAAAA,MAAM,EAAE;AAJL;AAL0B,CAAlB,CAAf;AAaA,eAAe9B,UAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\n\r\nimport { ArcRotateCamera } from \"@babylonjs/core/Cameras/arcRotateCamera\";\r\nimport { HemisphericLight } from \"@babylonjs/core/Lights/hemisphericLight\";\r\nimport { Vector3 } from \"@babylonjs/core/Maths/math.vector\";\r\nimport { GridMaterial } from \"@babylonjs/materials/grid/gridMaterial\";\r\n\r\nimport { Mesh } from \"@babylonjs/core/Meshes/mesh\";\r\n// for basic shapes\r\nimport \"@babylonjs/core/Meshes/meshBuilder\";\r\nimport '@babylonjs/core/Materials/standardMaterial';\r\n\r\nimport SceneTemplate from '../SceneTemplate';\r\n\r\nclass SceneComp1 extends React.Component {\r\n  onInitScene = async (scene) => {\r\n    // This creates and positions an arcRotate camera\r\n    const camera = new ArcRotateCamera(\"ArcRotateCamera\", 2, 1.45, 10, new Vector3(0, 0, 0), scene);\r\n    camera.upperBetaLimit = Math.PI / 2;\r\n    camera.lowerRadiusLimit = 5;\r\n    camera.upperRadiusLimit = 25;\r\n    \r\n    // This attaches the camera to the canvas\r\n    // camera.attachControl(canvas, true);\r\n    \r\n    // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\r\n    var light = new HemisphericLight(\"light1\", new Vector3(0, 1, 0), scene);\r\n\r\n    // Default intensity is 1. Let's dim the light a small amount\r\n    light.intensity = 0.7;\r\n\r\n    // Create a grid material\r\n    var material = new GridMaterial(\"grid\", scene);\r\n\r\n    // Our built-in 'box' shape. Params: name, size, scene\r\n    var box = Mesh.CreateBox(\"box\", 2, scene);\r\n\r\n    // Affect a material\r\n    box.material = material;\r\n\r\n    scene.registerBeforeRender(() => {\r\n      box.rotation.y += 0.01;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={ styles.container }>\r\n        <SceneTemplate onInitScene={ this.onInitScene }/>\r\n        <Text style={ styles.nav }>{ this.props.name }</Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {  \r\n    flex: 1,  \r\n    padding: 0\r\n  },\r\n  nav: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 10,\r\n  }\r\n});  \r\n\r\nexport default SceneComp1;"]},"metadata":{},"sourceType":"module"}